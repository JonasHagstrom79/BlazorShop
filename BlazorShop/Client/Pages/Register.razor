@page "/register"
@inject IAuthService AuthService

<PageTitle>Register</PageTitle>

<h3>Register</h3>

<EditForm Model="user" OnValidSubmit="HandleRegistration">
    <DataAnnotationsValidator /> @*looks for dataannotations on the model*@
    <div class="mb-3">
        <label for="email">Email</label>
        <InputText id="email" @bind-Value="user.Email" class="form-control" />
        <ValidationMessage For="@(() => user.Email)" />
    </div>
    <div class="mb-3">
        <label for="password">Password</label>
        <InputText id="password" @bind-Value="user.Password" class="form-control" type="password" /> 
        <ValidationMessage For="@(() => user.Password)" />
    </div>
    <div class="mb-3">
        <label for="confirmPassword">Confirm Password</label>
        <InputText id="confirmPassword" @bind-Value="user.ComfirmPassword" class="form-control" type="password"/>
        <ValidationMessage For="@(() => user.ComfirmPassword)" />
    </div>
    <button type="submit" class="btn btn-primary">Register</button>
    <div class="@messageCssClass">
        <span>@message</span>
    </div>
    @*<ValidationSummary />*@ @*To see if the component worked*@
</EditForm>

@code {
    //to be able to use the EditForm we need a model
    UserRegister user = new UserRegister();

    string message = string.Empty;
    string messageCssClass = string.Empty; //to be able to change color of the text

    async Task HandleRegistration()
    {
        var result = await AuthService.Register(user);
        message = result.Message;
        if (result.Success)
        {
            messageCssClass = "text-success";
        }
        else
            messageCssClass = "text-danger";
    }
}
